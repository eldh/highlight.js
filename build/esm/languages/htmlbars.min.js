function concat(...e){return e.map((e=>{
return(n=e)?"string"==typeof n?n:n.source:null;var n})).join("")}
function htmlbars(e){const n=function(e){const n={
"builtin-name":"action bindattr collection component concat debugger each each-in get hash if in input link-to loc log lookup mut outlet partial query-params render template textarea unbound unless view with yield"
},a=/\[.*?\]/,t=/[^\s!"#%&'()*+,.\/;<=>@\[\\\]^`{|}~]+/,s=concat("(",/'.*?'/,"|",/".*?"/,"|",a,"|",t,"|",/\.|\//,")+"),i=concat("(",a,"|",t,")(?==)"),l={
begin:s,lexemes:/[\w.\/]+/},r=e.inherit(l,{keywords:{
literal:"true false undefined null"}}),c={begin:/\(/,end:/\)/},o={
className:"attr",begin:i,relevance:0,starts:{begin:/=/,end:/=/,starts:{
contains:[e.NUMBER_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,r,c]}}},m={
contains:[e.NUMBER_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,{begin:/as\s+\|/,
keywords:{keyword:"as"},end:/\|/,contains:[{begin:/\w+/}]},o,r,c],returnEnd:!0
},d=e.inherit(l,{className:"name",keywords:n,starts:e.inherit(m,{end:/\)/})})
;c.contains=[d];const b=e.inherit(l,{keywords:n,className:"name",
starts:e.inherit(m,{end:/\}\}/})}),g=e.inherit(l,{keywords:n,className:"name"
}),u=e.inherit(l,{className:"name",keywords:n,starts:e.inherit(m,{end:/\}\}/})})
;return{name:"Handlebars",
aliases:["hbs","html.hbs","html.handlebars","htmlbars"],case_insensitive:!0,
subLanguage:"xml",contains:[{begin:/\\\{\{/,skip:!0},{begin:/\\\\(?=\{\{)/,
skip:!0},e.COMMENT(/\{\{!--/,/--\}\}/),e.COMMENT(/\{\{!/,/\}\}/),{
className:"template-tag",begin:/\{\{\{\{(?!\/)/,end:/\}\}\}\}/,contains:[b],
starts:{end:/\{\{\{\{\//,returnEnd:!0,subLanguage:"xml"}},{
className:"template-tag",begin:/\{\{\{\{\//,end:/\}\}\}\}/,contains:[g]},{
className:"template-tag",begin:/\{\{#/,end:/\}\}/,contains:[b]},{
className:"template-tag",begin:/\{\{(?=else\}\})/,end:/\}\}/,keywords:"else"},{
className:"template-tag",begin:/\{\{(?=else if)/,end:/\}\}/,keywords:"else if"
},{className:"template-tag",begin:/\{\{\//,end:/\}\}/,contains:[g]},{
className:"template-variable",begin:/\{\{\{/,end:/\}\}\}/,contains:[u]},{
className:"template-variable",begin:/\{\{/,end:/\}\}/,contains:[u]}]}}(e)
;return n.name="HTMLbars",e.getLanguage("handlebars")&&(n.disableAutodetect=!0),
n}export default htmlbars;